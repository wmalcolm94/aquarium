name: Aquarium REST API Integration Build

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - '.github/workflows/**'

jobs:
  build:
    name: Aquarium REST API Integration Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
          ssh-key: ${{ secrets.COMMIT_SSH_KEY }}
      
      # Installs Node.js on the github runner.
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      # Run's the test suite to help ensure proper functionality
      - name: Run Build
        working-directory: api
        run: |
          dotnet build

  release:
    name: Create and Publish Aquarium REST API Release
    runs-on: ubuntu-latest
    steps:
      # Checks out the repo
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
          ssh-key: ${{ secrets.COMMIT_SSH_KEY }}

      # Installs the git version tool 
      - name: Install GitVersion Tool
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: '5.8.1'

      - name: Calculate Semantic Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
        with:
          useConfigFile: true
          configFilePath: ./api/Gitversion.yml
      
      - name: Drop Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "4181374326542+github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.gitversion.outputs.semVer }}
          git push origin ${{ steps.gitversion.outputs.semVer }}
      # - name: Login to Docker
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Login to GHCR
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./aqi
      #     push: true
      #     tags: wmalcolm94/aquarium-api:${{ steps.gitversion.outputs.semVer }}, wmalcolm94/aquarium-api:${{ steps.gitversion.outputs.sha }}

      # Creates a release with the changes in github
      - name: Aquarium REST API Release
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.gitversion.outputs.semVer }}',
              name: 'REST API ${{ steps.gitversion.outputs.semVer }}',
              generate_release_notes: true
            });